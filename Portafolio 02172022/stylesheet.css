
/*Table of contents*/
    /*0.1 Box Sizing*/
    /*0.2 Custom Properties*/
    /*0.3 General Styles*/
    /*0.4 Typography*/

    /*1.0 Header*/
    /*1.2 navigation and navigation list*/
    /*1.3 nav-toggle <button> + .js fuctionality*/
    /*1.5 Hamburger*/

    /*2.0 Intro Section*/
    /*3.0 My Services*/
    /*4.0 About Me*/
    /*5.0 My Work*/
    /*6.0 Footer*/

*,
*::before,
*::after{
    box-sizing: border-box;
}

/*0.2 Custom Properties*/
:root{
    --ff-primary:'Roboto Serif', sans-serif;
    --ff-secondary:'Fira Code', monospace;

    --fw-reg:300;
    --fw-bold: 900;

    --fs-h1: 3rem;
    --fs-h2: 2.25rem;
    --fs-h3: 1.25rem;
    --fs-body: 1rem;

    --clr-light: #fff;
    --clr-dark: #303030;
    --clr-accent: #29d9c2;

    --bs: 0.25em .25em 0.75em rgba(0,0,0,.25),
          0.125em 0.125em 0.25em rgba(0,0,0,.15) ;
    /*box-shadow: to the right and down, then blur and then color, last number is opacity*/
    /*the second shadow is closer to the img and darker, this gives a more realistic look to the overall shadow, since it looks like it fades away, in material design they use 3 shadows.*/
    
    /*
    --clr-white: rgba(242,242,242,1.0) ;
    --clr-black: rgba(13,13,13,1.0) ;
    --clr-orange: rgba(242,92,5,1.0);
    --clr-blue: rgba(112,160,191,1.0);
    --clr-dark-blue: rgba(45,104,145,1.0);
    --clr-light: rgba(242,194,153,1.0);
    */
}

@media (min-width: 800px){
    :root{
    --fs-h1: 4.5rem;
    --fs-h2: 3.75rem;
    --fs-h3: 1.5rem;
    --fs-body: 1.125rem;
    }
}

/* 0.3 General Styles*/
html{
    scroll-behavior: smooth;
}
body{
    background-color: var(--clr-light);
    color: var(--clr-dark);
    margin: 0;
    font-family: var(--ff-primary);
    font-size: var(--fs-body);
    /*Default line height suggested for all projects*/
    line-height: 1.6;
}

section{
    padding: 5em 2em;
    /* this is short hand for top-bottom and left-right*/
    /*Margins and Paddings should be in EM so they are relative to their elements and not to the root*/
    /*5em of padding top-bottom seemed like a lot of padding but its what KP suggested so well go with it*/
}

img{
    display: block;
    max-width: 100%;
}

:focus {
    outline: 3px solid var(--clr-accent);
    outline-offset: 3px;
    /*this makes it so there is an outline on the button as we TAB through the page, once we land on the button, it will have the outlines. helpfull for keyboard fuctionality*/
}

/*Buttons*/

.btn{
    display: inline-block;
    padding: 0.5em 2.5em;
    background: var(--clr-accent);
    color: var(--clr-dark);
    text-decoration: none;
    cursor: pointer;
    /*makes the cursor a hand when over the button, helps button stand out as functional*/
    font-size: 0.8rem;
    text-transform: uppercase;
    letter-spacing: 2px;
    font-weight: var(--fw-bold);
    transition: transform 200ms ease-in-out;
}

.btn:hover{
    transform: scale(1.1);
}

/*0.4 Typography*/

h1,
h2,
h3{
    line-height: 1;
    /* since these are large headings, this line height will be determined by trial and error, if the headigns end up breaking into two line then the line height needs to be smaller and adjusted*/
    /*line-height was adjusted form 1.1 to 1*/
    margin:0;
    /*In general, headings should not have a margin and it has to be specified, without this the heading will have a margin and give us trouble like it has in other projects*/

}

h1{ font-size: var(--fs-h1)}
h2{ font-size: var(--fs-h2)}
h3{ font-size: var(--fs-h3)}

.section__title{
    /*this class includes all section titles <h2>*/
    margin-bottom: 0.25em;
    /*This was given margin so the title would not touch the element below, the margin is small regardless, use margins on text with caution*/
    /*Marign and Paddings on TEXT should be in EM fo they are relative to the font size*/
    /*In general, headings should not have a margin and it has to be specified, without this the heading will have a margin and give us trouble like it has in other projects*/
}

.section__title--intro{
    font-weight: var(--fw-reg)
}

strong{ font-weight: var(--fw-bold)}
/*the name in the title had to be bolded because the previous font-weight did an override of the <strong> tag */

/* COMPOUND SELECTORS
    .section__title--intro{
        font-weight: var(--fw-reg)
    }
    .section__title--intro strong{
        display: block;
    }
 These are considered compound selectors becausue they target the same element. usually not recommended but there are alwasy exeptions to the rules

*/
.section__title--intro strong{
    display: block;
    /*This is NOT normaly done, in this case it was done so that the name in the title would alwasy appear on its own seperate line*/
    /*This is NOT normaly done, in this case it was done so that the name in the title would alwasy appear on its own seperate line*/
}


.section__subtitle{
    /*this class includes all section subtitles <p>*/
    margin: 0;
    font-size: var(--fs-h3)
    /*This subtitle ended up being a <p> element so we have to make it the size of h3*/
    /*In general, headings should not have a margin and it has to be specified, without this the heading will have a margin and give us trouble like it has in other projects*/
}

.section__subtitle--intro,
.section__subtitle--about{
    /*this class includes specific section subtitles that are determined by the format --intro or --about <p>*/
    background: var(--clr-accent);
    padding: 0.25em 1em;
    /*padding deals with the space that contents have within container, so it gave the text inside these containers space between the borders, can be thought about positioning tool inside of containers*/
    font-family: var(--ff-secondary);
    margin-bottom: 1em;
    /*this margin was done to separate the subtitle from their sorrounding and avoid looking squished*/
    /*Marign and Paddings should be in EM so they are relative to the font size or relaive to the size of container*/
}

.section__subtitle--work{
    color: var(--clr-accent);
    font-weight: var(--fw-bold);
    margin-bottom: 2em;
}

/*1.0 Header*/
header{
    display: flex;
    justify-content: space-between;
    /*will spread out contents evenly*/
    padding: 1em;

}

.logo{
    max-width: 100px;
}

nav{
    position:fixed;
   
    background: var(--clr-dark);
    /*The background shorthand CSS property sets all background style properties at once, such as color, image, origin and size, or repeat method.*/
   
    color: var(--clr-light);
   
    /*below this is related to postioning:fixed; */
    top:0;
    bottom:0;
    left:0;
    right:0;
    /*above this is related to postioning:fixed;*/

    z-index: 100;

    /*Pair to creat effect*/
    transform: translate(100%);/*shift off to the left due to x-axis moving the nav off the screen completely. For practice change to 50% and the nav will take up 50% of the viewport, coming in from the right*/
    /*describes effect result*/
    transition: transform 250ms cubic-bezier(.5,0,5,1);
    /*Describes effect progression*/
}

.nav__list{
    list-style: none; /*takes away bullet points*/
    display: flex;
    height: 100%;

    flex-direction: column;
    /*The flex-direction CSS property sets how flex items are placed in the flex container defining the main axis and the direction */

    justify-content: space-evenly;
    align-items: center;
    margin: 0;
    padding: 0;


}

.nav__link{
    color: inherit;
    /*The inherit CSS keyword causes the element for which it is specified to take the computed value of the property from its parent element.*/

    font-weight: var(--fw-bold);
    font-size: var(--fs-h2);
    text-decoration: none;
}

.nav__link:hover{
    color: var(--clr-accent);
}

/*1.3 nav-toggle <button> + .js fuctionality*/
.nav-toggle{ /*this is the <button>*/
    padding: .5em;

    /*these two properties take away the border of the <button>*/
    background: transparent;
    border: 0;

    cursor: pointer;
    position: absolute;
    right: 1em;
    top: 1em;
    z-index: 1000;
    /*large z-index to keep nav-toggel in view so it can be clicked on when nav is open*/

}

/*.js fuctionality*/
.nav-open .nav{
    transform: translateX(0);
    /*every time we click the button, JS adds this class and applies the properties dessignated to the class in css.*/

}

.nav-open .nav-toggle{
    position: fixed;
}

.nav-open .hamburger{
    transform: rotate(0.625turn);

}

.nav-open .hamburger::before {
    transform: rotate(90deg) translateX(-6px);
}

.nav-open .hamburger::after {
    opacity: 0;
}

/*1.5 Hamburger*/

.hamburger{ /*this is the <span>, we are making it into a visible element instead of just html*/
    display: block;
    /*The element generates a block element box, generating line breaks both before and after the element when in the normal flow. You can give this a height outside of its line height.*/
    position: relative;

}

/*the code below is a simplification of previous code. it contains all properties that are shared across these classes which make up the <span> and the psudo-element lines that match it to make the 3 lines*/
.hamburger,
.hamburger::before,
.hamburger::after{
    background: var(--clr-accent);
    width: 2em;
    height: 3px;
    border-radius:1em;
    transition: transform 250ms ease-in-out;

}

.hamburger::before,
.hamburger::after{
    content: '';
    /*must give this setting, without it the psudoelement will not appear*/
    position: absolute;
    left: 0;
    right: 0;
    /*this makes the two line created match the .hamburger <span> above. They match because it is set to position:relative; above*/
    background: var(--clr-accent);


     /*this is a psudoelement, a design element that is not meant to be interacted with. does not appear in html, the ::after determines its position relative to the class or element determined.*/

}

.hamburger::before{ top:6px}
.hamburger::after{bottom: 6px;}


/*2.0 Intro Section*/

.intro{
    position: relative ;
}

.intro__img{
    box-shadow: var(--bs);
}

@media (min-width:600px){
    .intro{
        display: grid;
        width: min-content;
        /*this shrinks down the section container helping with centering/ the sectin will match the content that is inside of it, thus not growing, only staying the size it requires*/
        margin: 0 auto;
        /*this centers the section container by calculating margins and making them equal on the left and right for the container*/
        grid-column-gap: 1em;
        /*this gap was used to separate the headings from the other grid contents*/
        grid-template-areas: 
            'img title'
            'img subtitle';
        grid-template-columns: min-content max-content;
    /*min content will shrink img down as much as possible, max content will make text as big as possible*/    
    }

    .intro__img{
        grid-area: img;
        min-width: 250px;
        /*this min-width was set so the img would never disappear regarless of screen size*/
        position: relative;
        z-index: 2;
        /*this makes sure that the img is in front of other elements, like the subtitle element/container*/
    }

    .section__subtitle--intro{
        align-self: start;
        /*this will keep the element from streaching the width of the page*/
        grid-column: -1/1;
        /*this will have the element streach the widht of the container, its a very specific setting*/
        grid-row: 2;
        /*This is done so that grid items overlap, since they do not by default*/
        text-align: right;
        position: relative;
        left: -1.5em;
        /* position: relative and left: -1.5em,brings the subtitle element over the img and now they are physicaly overlaping, this deals with position and not dimensions fo the element, regarless we use em*/
        width: calc(100% +1.5em)
        /*this makes the width of the subtitle element 100% of the container, plus 1.5 em. this shifts the element a little offset to the left giving it the style*/
    }

}
/*general or generic media quaries suggestion is to desing from 300px + 600px + and 900px + (KP)*/


/*3.0 My Services*/

.my-services{
    background-color: var(--clr-dark);
    background-image: url(services_img.jpeg);
    /*always set a background-color before a background-image just in case the image fails when loading, the background color will be substituted*/
    background-size: cover;
    background-blend-mode: multiply;
    /*this darkens the image*/
    color: var(--clr-light);
    text-align: center;
}

.section__title--services{
    color: var(--clr-accent);
    position: relative;
}

.section__title--services::after{
    content: '';
    /*must give this setting, without it the psudoelement will not appear*/
    display: block;
    width: 2em;
    height: 1px;
    margin: 0.5em auto 1em;
    background: var(--clr-light);
    opacity: 0.25;
    /*this is a psudoelement, a design element that is not meant to be interacted with. does not appear in html, the ::after determines its position relative to the class or element determined.*/
}

.services{
    margin-bottom: 4em;
}


.service{
    max: width 500px;
    margin: 0 auto;
}
@media (min-width:800px){
    .services{
        display: flex;
        max-width: 1000px;
        margin-left: auto;
        margin-right: auto;
       /*   margin: 0 auto; 
       was subtituted for 
            margin-left: auto;
            margin-right: auto;
        because the 
            .services{margin-bottom: 4em;} 
        were being overiden, leving little margin-bottom. using the new settings the items are still centered but do not interfere with the previous setting*/
    }

    .service + .service{
        margin-left: 2em;
    }
}

/*4.0 About Me*/

.about-me{
    max-width: 1000px;
    margin: 0 auto;
}

.about-me__img{
    box-shadow: var(--bs);
}

@media (min-width:600px){
    .about-me{
        display: grid;
        grid-template-columns: 1fr 200px;
        grid-template-areas:
            'title img'
            'subtitle img'
            'text img' ;
            grid-column-gap: 2em;
    }

    .section__title--about{
        grid-area: title;
    }
    
    .section__subtitle--about{
        grid-column: 1/-1;
        grid-row: 2;
        position: relative;
        left: -1em;
        width: calc(100% + 2em);
        padding-left: 1em;
        padding-right: calc(200px + 4em)

    }

    .about-me__img{
        grid-area: img;
        position: relative;
        z-index: 2;
    }
}


/*5.0 My Work*/

.my-work{
    background-color: var(--clr-dark);
    color: var(--clr-light);
    text-align: center;

}

.portfolio{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    /*Repeat automatically makes 3 columns each 1 fraction wide*/
    /*could also do 
    grid-template-columns: repeat(auto-fit, minmax(300px,1fr);*/
}

.portfolio__item{
    background: var(--clr-accent);
    overflow: hidden;
    /*overflow:hidden; hides content that grows outside its container, specally since in this case it has a transform:scale(1.2) */
    /*the background color is the line, there is not actual border*/
}

.portfolio__img{
    transition:
    /*this describes the transition itself*/
        transform 750ms cubic-bezier(.5,0,.5,1),
        /*750ms is s slow transition/ the time it takes to complete*/
        opacity 250ms linear;
        /*faster transition since it has a lower time*/
}

.portfolio__item:focus{
    position: relative;
    z-index:2;
    /*The :focus CSS pseudo-class represents an element (such as a form input) that has received focus. It is generally triggered when the user clicks or taps on an element or selects it with the keyboard's Tab key.thus the transition will be applied when tab is used as well*/
    /*this setting makes it so the prevous setting are superimposed or on top alwas */
}

.portfolio__img:hover,
.portfolio__item:focus .portfolio__img{
    transform: scale(1.20);
    opacity: 0.75;
    /*this descrbes the hover state: the element will grow to 1.2x the original size when hover over*/
    /*The :focus CSS pseudo-class represents an element (such as a form input) that has received focus. It is generally triggered when the user clicks or taps on an element or selects it with the keyboard's Tab key.thus the transition will be applied when tab is used as well*/

}

/*6.0 Footer*/
.footer{
    background: #111;
    color: var(--clr-accent);
    text-align: center;
    padding: 2.5em 0;
    font-size: var(--fs-h3);
}

.footer a {color: inherit;}

.footer__link{
    font-size: var(--fs-h3);
    font-weight: var(--fw-bold);
}


.footer_link:hover,
.social-list__link:hover{
    opacity: .7;
}

.footer__link:hover{
    text-decoration: underline;
}

.social-list{
    list-style: none;
    /*takes away the bullet points*/
    display: flex;
    /*placed icons in a row*/
    justify-content: center;
    margin: 2em 0 0;
    padding: 0;

}

.social-list__item{
    margin: 0.5em;
}

.social-list__link{
    padding: 0.5em;
}





















































































































